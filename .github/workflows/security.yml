---
name: Security Checks

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  schedule:
    - cron: '0 3 * * 1'
  workflow_dispatch: {}

jobs:
  shellcheck:
    name: ShellCheck (bash scripts)
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Run ShellCheck
        uses: ludeeus/action-shellcheck@master
        with:
          severity: style

  gitleaks:
    name: Gitleaks (secrets scan)
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Run Gitleaks
        uses: gitleaks/gitleaks-action@v2
        with:
          args: |
            detect \
              --source . \
              --no-git

  grep-check:
    name: Grep for risky patterns
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Search for dangerous commands
        run: |
          echo "Checking for dangerous patterns..."
          grep -nE \
            "curl .*sh|wget .*sh|rm -rf|
            --privileged|/:|/etc|/var/run/docker.sock" \
            -R . || true

  codeql:
    name: CodeQL (static analysis)
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: javascript
          queries: +security-and-quality
      - name: Autobuild
        uses: github/codeql-action/autobuild@v3
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

  yamllint:
    name: Yamllint (YAML configs)
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install yamllint
        run: sudo apt-get update && sudo apt-get install -y yamllint
      - name: Run yamllint
        run: yamllint .
